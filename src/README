A java class to get gate GCP documents from sql databases and a wrapper CREOLE plugin class to 
load it into your GATE apps (so you can use SQLInputHandler as an input type in GCP config)

Compiling and Testing the InputHandler classes
-----------------------------------------------

1. Create a db.properties file describing your database connection settings for testing. 
   This should go in the lib/ directory. There is an example in lib/db.properties.example
   There is also a default log4j.properties file in lib, should you wish to modify it.

2. Make sure you have the appropriate jdbc driver for your database in your classpath. 

3. Set your CLASSPATH to find various libs required for testing

  export CLASSPATH=$GATE_HOME/bin/gate.jar:$GATE_HOME/lib/*:$GCP_HOME/gcp.jar:$GCP_HOME/lib/*:/gcpdata/lib:/gcpdata/lib/*

4. Define aliases for the compile and test commands to save on typing

  alias docompile="javac -d lib src/gate/cloud/io/sql/SQLInputHandler.java src/gate/cloud/io/sql/SQLStreamingInputHandler.java src/test/TestSQLInputHandler.java src/test/TestSQLStreamingInputHandler.java"

  alias dotest='java -cp "lib/*:lib/:$CLASSPATH" org.junit.runner.JUnitCore TestSQLInputHandler TestSQLStreamingInputHandler'

5. Compile

  docompile 

6. Run Tests

  dotest



Make the jar file for GATE 
----------------------------

The SQLInputHandlerWrapper.java class just imports the InputHandlers and can then be included in your
GATE app as a CREOLE plugin. Once you're satisfied with the InputHandlers, you can build the wrapper jar: 

  ant jar


Load the jar as a CREOLE Plugin in your GATE app
------------------------------------------------

Now you can go to the configure plugins option in GATE developer, add the directory as a source of
plugins and use the new CREOLE plugin. You just have to load it in your app, then save your app for
GATE cloud, then you can define the input handler in your config file.

If you are running the GCP docker container and you want to open GATEdeveloper, the easiest thing to do it just to share your X11 socket:

  docker run --rm -it -v /gcpdata:/gcpdata  -v /tmp/.X11-unix:/tmp/.X11-unix   -e DISPLAY=$DISPLAY -v $HOME/.Xauthority:/root/.Xauthority --net=host -e 'JAVA_OPTS=-Xmx8G' --entrypoint=/bin/bash cassj/gcp
